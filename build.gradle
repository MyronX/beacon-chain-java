plugins {
  id "io.spring.dependency-management" version "1.0.6.RELEASE"
  id 'com.github.kt3k.coveralls' version '2.8.2'
}
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'io.spring.dependency-management'

  apply from: "${rootDir}/versions.gradle"

  version = rootProject.version

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  dependencies {
    implementation 'com.google.code.findbugs:jsr305'
    implementation 'org.javatuples:javatuples'

    testImplementation 'junit:junit'
    testImplementation 'org.assertj:assertj-core'
  }

  repositories {
    jcenter()
  }

  task allDependencies(type: DependencyReportTask) {}

  javadoc {
    options.author = true
    options.header = project.name
    options.addStringOption('-quiet')
    options.encoding = "UTF-8"
    options.links(
            "http://docs.oracle.com/javase/8/docs/api/"
    )
  }
}

def allSubProjects = subprojects.findAll()
jacoco {
  toolVersion = "0.8.3"
}

task jacocoMerge(type: JacocoMerge) {
  allSubProjects.each { subproject ->
    executionData = files(subproject.tasks.withType(Test))
  }
  doFirst {
    executionData = files(executionData.findAll { it.exists() })
  }
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
  description = 'Generates an aggregate report from all subprojects'
  dependsOn allSubProjects.test, jacocoMerge

  additionalSourceDirs = files(allSubProjects.sourceSets.main.allSource.srcDirs)
  sourceDirectories = files(allSubProjects.sourceSets.main.allSource.srcDirs)
  classDirectories = files(allSubProjects.sourceSets.main.output)
  executionData = files(jacocoMerge.destinationFile)

  reports {
    html.enabled = true // human readable
    xml.enabled = true // required by coveralls
  }
}

coveralls {
  sourceDirs = allSubProjects.sourceSets.main.allSource.srcDirs.flatten()
  jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
  group = 'Coverage reports'
  description = 'Uploads the aggregated coverage report to Coveralls'

  dependsOn jacocoRootReport
}
