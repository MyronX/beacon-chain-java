version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/beacon-chain

    environment:
      JAVA_TOOL_OPTIONS: -Xmx2G
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
      GRADLE_MAX_TEST_FORKS: 2

    steps:
      - checkout
      - restore_cache:
          name: Restoring cached gradle dependencies
          keys:
            - v1-gradle-dir-{{ checksum "build.gradle" }}
            - v1-gradle-dir-
      - run:
          name: Install git-lfs for submodules with large files
          command: |
            sudo sh -c "echo 'deb http://ftp.debian.org/debian stretch-backports main' >> /etc/apt/sources.list"
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get update && sudo apt-get install -y git-lfs
      - run:
          name: Downloading dependencies
          command: ./gradlew allDependencies

      - run:
          name: Compiling
          command: ./gradlew assemble

      - run:
          name: Collecting artifacts
          command: |
            mkdir -p ~/jars
            find . -type f -regex ".*/build/libs/.*jar" -exec cp {} ~/jars/ \;
          when: always

      - store_artifacts:
          name: Uploading artifacts
          path: ~/jars
          destination: jars
          when: always

      - run:
          name: Running tests
          command: ./gradlew test:test --info clean cleanTest test --continue

      - run:
          name: Collecting test results
          command: |
            ./gradlew coveralls
            mkdir -p ~/test-results/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/ \;
          when: always

      - store_test_results:
          name: Uploading test results
          path: ~/test-results
          destination: tests
          when: always

      - run:
          name: Collecting reports
          command: |
            mkdir -p ~/reports
            find . -type d -regex ".*/build/reports/tests/test" | while read dir; do
                module=`echo $dir | sed -e 's/build\/reports\/tests\/test//'`
                mkdir -p ~/reports/test/"$module"
                (cd "$dir" && tar c .) | (cd ~/reports/test/"$module" && tar x)
            done
            find . -type d -regex ".*/build/reports/jacoco/test/html" | while read dir; do
                module=`echo $dir | sed -e 's/build\/reports\/jacoco\/test\/html//'`
                mkdir -p ~/reports/jacoco/"$module"
                (cd "$dir" && tar c .) | (cd ~/reports/jacoco/"$module" && tar x)
            done
          when: always

      - store_artifacts:
          name: Uploading reports
          path: ~/reports
          destination: reports

      - run:
          name: Building JavaDoc
          command: ./gradlew :javadoc

      - store_artifacts:
          name: Uploading JavaDoc
          path: build/docs/javadoc
          destination: javadoc

      - save_cache:
          name: Caching gradle dependencies
          paths:
            - .gradle
            - ~/.gradle
          key: v1-gradle-dir-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .BuildNum }}
